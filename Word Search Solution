class Solution {
    public boolean exist(char[][] board, String word) {
        int n = board.length;
        int m = board[0].length;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(dfs(board,word,i,j,n,m,0)) return true;
            }
        }
        return false;
    }

    public boolean dfs(char[][] board,String word,int row,int col,int n,int m,int ind){
        if(ind==word.length()) return true;

        if(row<0 || row>=n || col<0 || col>=m || board[row][col]!=word.charAt(ind)) return false;

        char temp = board[row][col];
        board[row][col]='#';

        int[] delRow = {-1,0,1,0};
        int[] delCol = {0,1,0,-1};

        for(int i=0;i<4;i++){
            int newRow = row + delRow[i];
            int newCol = col + delCol[i];

            if(dfs(board,word,newRow,newCol,n,m,ind+1)) return true;
        }

        board[row][col]=temp;
        return false;
    }
}
