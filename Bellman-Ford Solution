class Solution {
    static int[] bellmanFord(int V, int[][] edges, int src) {
        // Write your code here
        int INF = (int) 1e8;
        int[] dis = new int[V];
        Arrays.fill(dis,INF);
        dis[src]=0;
        
        for(int i=0;i<V-1;i++){
            for(int[] edge: edges){
                int u=edge[0];
                int v=edge[1];
                int wt=edge[2];
                
                if(dis[u]!=INF && dis[u]+wt<dis[v]){
                    dis[v]=dis[u]+wt;
                }
            }
        }
        
        for(int[] edge: edges){
                int u=edge[0];
                int v=edge[1];
                int wt=edge[2];
                
            if(dis[u]!=INF && dis[u]+wt<dis[v]){
                return new int[]{-1};
            }
        }
        
        return dis;
    }
}
