import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'alternate' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int alternate(String s) {
    // Write your code here
    HashSet<Character> set = new HashSet<>();
    for(char ch: s.toCharArray()){
        set.add(ch);
    }
    
    int max = 0;
    
    for(char c1: set){
        for(char c2: set){
            if(c1==c2) continue;
            
            StringBuilder res = new StringBuilder();
            
            for(int i=0;i<s.length();i++){
                if(s.charAt(i)==c1 || s.charAt(i)==c2){
                    res.append(s.charAt(i));
                }
            }
            
            if(check(res.toString())){
                max = Math.max(max,res.length());
            }
        
        }
    }
    
    return max;

    }
    
    public static boolean check(String str){
        int n = str.length();
        for(int i=1;i<n;i++){
            if(str.charAt(i)==str.charAt(i-1)) return false;
        }
        return true;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int l = Integer.parseInt(bufferedReader.readLine().trim());

        String s = bufferedReader.readLine();

        int result = Result.alternate(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
