class Solution {
    public boolean isPossible(int[] weights,int capacity,int days){
        int day=1;
        int currentLoad=0;

        for(int weight:weights){
            if(currentLoad+weight > capacity){
                day++;
                currentLoad=0;
            }
            currentLoad+=weight;

            if(day>days){
                return false;
            }
        }
        return true;
    }
    public int shipWithinDays(int[] weights, int days) {
        int n = weights.length;
        int maxWeight = 0;
        int totalWeight = 0;

        for(int weight:weights){
            maxWeight= Math.max(maxWeight,weight);
            totalWeight+=weight;
        }

        int low = maxWeight;
        int high = totalWeight;

        int ans = 0;

        while(high>=low){
            int mid = low + (high-low)/2;
            if(isPossible(weights,mid,days)){
                ans = mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
}
