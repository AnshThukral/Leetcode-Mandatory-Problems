class Solution {
    static Boolean[][] t;
    public boolean isInterleave(String s1, String s2, String s3) {
        int n = s1.length();
        int m = s2.length();
        int z = s3.length();

        if(z != (n+m)) return false;

        t = new Boolean[n+1][m+1];

        return solve(s1,s2,s3,n,m,z);
    }
    public boolean solve(String s1,String s2,String s3,int n,int m,int z){
        if(n==0 && m==0) return z==0;

        if(t[n][m] != null) return t[n][m];

        if(n>0 && s1.charAt(n-1)==s3.charAt(z-1)){
            if(solve(s1,s2,s3,n-1,m,z-1)){
                return t[n][m] = true;
            }
        }

        if(m>0 && s2.charAt(m-1)==s3.charAt(z-1)){
            if(solve(s1,s2,s3,n,m-1,z-1)){
                return t[n][m] = true;
            }
        }

        return t[n][m] = false;
    }
}
