class GfG
{
    int minEle=-1;
    Stack<Integer> s;
    
    // Constructor    
    GfG()
	{
	    s = new Stack<>();
	}
	
    /*returns min element from stack*/
    int getMin()
    {
	// Your code here
	if(s.isEmpty()){
	    return -1;
	}
	return minEle;
    }
    
    /*returns poped element from stack*/
    int pop()
    {
	// Your code here
	int ans=-1;
	if(s.isEmpty()){
	    return -1;
	}
	else{
	    if(s.peek()>=minEle){
	        ans=s.peek();
	        s.pop();
	    }
	    else if(s.peek()<minEle){
	        ans=minEle;
	        minEle=2*minEle-s.peek();
	        s.pop();
	    }
	}
	return ans;
    }

    /*push element x into the stack*/
    void push(int x)
    {
	// Your code here	
	if(s.isEmpty()){
	    s.push(x);
	    minEle=x;
	}else{
	    if(x>=minEle){
	        s.push(x);
	    }
	    else if(x<minEle){
	        s.push(2*x-minEle);
	        minEle=x;
	    }
	}
    }	
}
