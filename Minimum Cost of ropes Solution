class Solution {
    // Function to return the minimum cost of connecting the ropes.
    public int minCost(int[] arr) {
        PriorityQueue<Integer> minHeap = new PriorityQueue<>();
    
        for(int i=0;i<arr.length;i++){
            minHeap.add(arr[i]);
        }
        
        int cost = 0;
        
        while(minHeap.size() >= 2){
            int first = minHeap.peek();
            minHeap.poll();
            int second = minHeap.peek();
            minHeap.poll();
            
            cost = cost + first + second;
            
            minHeap.add(first+second);
        }
        
        return cost;
    }
}
