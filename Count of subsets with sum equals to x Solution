DP APPROACH

import java.util.*;
import java.io.*;

public class Solution {
    public static int findWays(int num[], int tar) {
        // Write your code here.
        int n = num.length;
        int[][] t = new int[n+1][tar+1];

        for(int i=0;i<n+1;i++){
            for(int j=0;j<tar+1;j++){
                if(i==0){
                    t[i][j]=0;
                }
                if(j==0){
                    t[i][j]=1;
                }
            }
        }

        for(int i=1;i<n+1;i++){
            for(int j=1;j<tar+1;j++){
                if(num[i-1] <= j){
                    t[i][j] = t[i-1][j-num[i-1]] + t[i-1][j];
                }else{
                    t[i][j] = t[i-1][j];
                }
            }
        }

        return t[n][tar];
    }
} 
