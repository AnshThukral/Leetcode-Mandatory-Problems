class Solution {
    // Function to return list containing vertices in Topological order.
    static ArrayList<Integer> topologicalSort(ArrayList<ArrayList<Integer>> adj) {
        // Your code here
        int n = adj.size();
        int[] inDeg = new int[n];
        
        for(int i=0;i<n;i++){
            for(int it:adj.get(i)){
                inDeg[it]++;
            }
        }
        
        Queue<Integer> q = new LinkedList<>();
        
        for(int i=0;i<n;i++){
            if(inDeg[i]==0){
                q.offer(i);
            }
        }
        ArrayList<Integer> ans = new ArrayList<>();
        
        while(!q.isEmpty()){
            int node = q.poll();
            ans.add(node);
            
            
            for(int nbr: adj.get(node)){
                inDeg[nbr]--;
                
                if(inDeg[nbr]==0){
                    q.offer(nbr);
                }
            }
        }
        return ans;
    }
}
