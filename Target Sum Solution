class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int n = nums.length;
        int range = 0;
        for(int num : nums){
            range = range + num;
        }
        
        int sum = range + target;
        
        if(sum<0 || sum%2!=0 || target>range){
            return 0;
        }
        
        int s1 = sum/2;
        
        return countSubset(nums,s1);
        
    }
    
    public int countSubset(int[] arr,int tar){
        int n = arr.length;
        if(tar<0){
            return 0;
        }
        int[][] t = new int[n+1][tar+1];
        
        t[0][0]=1;
        
        for(int i=1;i<n+1;i++){
            for(int j =0;j<tar+1;j++){
                if(arr[i-1]<=j){
                    t[i][j] = t[i-1][j-arr[i-1]] + t[i-1][j];
                }else{
                    t[i][j] = t[i-1][j];
                }
            }
        }
        
        return t[n][tar];
    }
}
