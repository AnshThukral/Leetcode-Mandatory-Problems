class Solution {
    public int clumsy(int n) {
        Stack<Integer> s = new Stack<>();
        s.push(n--);
        int i = 0;
        while(n>0){
            switch(i%4){
                case 0:
                  s.push(s.pop()*n);
                  break;
                case 1:
                  s.push(s.pop()/n);
                  break;
                case 2:
                  s.push(n);
                  break;
                case 3:
                  s.push(-n);
                  break;
            }
            i++;
            n--;
        }

        int ans = 0;

        while(!s.isEmpty()){
            ans += s.pop();
        }

        return ans;
    }
}
