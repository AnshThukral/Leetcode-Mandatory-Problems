class Solution {
    public int maxFreeTime(int eventTime, int[] startTime, int[] endTime) {
        int n = startTime.length;
        int[] arr = new int[n+1];
        arr[0] = startTime[0]-0;
        for(int i=1;i<n;i++){
            arr[i] = startTime[i] - endTime[i-1];
        }
        arr[n] = eventTime - endTime[n-1];

        int res = 0;
        n = n+1;

        int[] left = new int[n];
        int[] right = new int[n];

        for(int i=1;i<n;i++){
            left[i] = Math.max(left[i-1],arr[i-1]);
        }
        for(int i=n-2;i>=0;i--){
            right[i] = Math.max(right[i+1],arr[i+1]);
        }

        for(int i=1;i<n;i++){
            int curr = endTime[i-1] - startTime[i-1];

            if(curr<=Math.max(left[i-1],right[i])){
                res = Math.max(res,curr+arr[i-1]+arr[i]);
            }
            res = Math.max(res,arr[i-1]+arr[i]);
        }
        
        return res;
    }
}
