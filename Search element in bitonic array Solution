import java.util.*;
public class dsa{
    public static void main(String[] args) {
        int arr[]={1,3,8,12,4,2};

        int start=0;
        int end=arr.length-1;

        int max=-1;

        while(start<=end){
            int mid=start + (end-start)/2;

            if(mid>0 && mid<arr.length-1){
                if(arr[mid]>arr[mid+1] && arr[mid]>arr[mid-1]){
                    max=mid;
                    break;
                }else if(arr[mid+1]>arr[mid]){
                    start=mid+1;
                }else{
                    end=mid-1;
                }
            }else if(mid==0){
                if(arr[mid]>arr[mid+1]){
                    max=mid;
                }
                else{
                    max=mid+1;
                }
                break;
            }else if(mid==arr.length-1){
                if(arr[mid]>arr[mid-1]){
                    max=mid;
                }else{
                    max=mid-1;
                }
                break;
            }
        }

        int res1= AscBinarySearch(arr,0,max-1,12);
        int res2= DesBinarySearch(arr,max,arr.length-1,12);

        if(res1!=-1){
            System.out.println(res1);
        }else if(res2!=-1){
            System.out.println(res2);
        }else{
            System.out.println(-1);
        }
        
    }
    public static int AscBinarySearch(int arr[],int s,int e,int target){
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]==target){
                return mid;
            }else if(arr[mid]>target){
                e=mid-1;
            }else{
                s=mid+1;
            }
        }
        return -1;
    }
    public static int DesBinarySearch(int arr[],int s,int e,int target){
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]==target){
                return mid;
            }else if(arr[mid]>target){
                s=mid+1;
            }else{
                e=mid-1;
            }
        }
        return -1;
    }
}
