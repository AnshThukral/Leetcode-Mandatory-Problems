public class Solution {

    // Complete the minimumSwaps function below.
    static int minimumSwaps(int[] arr) {
        int n = arr.length;
        int[][] newArr = new int[n][2];
        
        for(int i=0;i<n;i++){
            newArr[i][0]=arr[i];
            newArr[i][1]=i;
        }
        
        Arrays.sort(newArr,(a,b)->a[0]-b[0]);
        
        boolean[] vis = new boolean[n];
        int swaps=0;
        
        for(int i=0;i<n;i++){
            if(vis[i] || newArr[i][1]==i) continue;
            
            int cycle = 0;
            int j=i;
            
            while(!vis[j]){
                vis[j]=true;
                j=newArr[j][1];
                cycle++;
            }
            
            if(cycle>1){
                swaps += (cycle-1);
            }
        }
        
        return swaps;

    }
