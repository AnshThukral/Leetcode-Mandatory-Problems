class Solution {
    public void dfs(int node,ArrayList<ArrayList<Integer>> adj,int[] vis){
        vis[node]=1;

        for(int nbr: adj.get(node)){
            if(vis[nbr]==0){
                dfs(nbr,adj,vis);
            }
        }
    }
    public int makeConnected(int n, int[][] connections) {
        int m = connections.length;

        if(m<n-1) return -1;

        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();

        for(int i=0;i<n;i++){
            adj.add(new ArrayList<>());
        }

        for(int[] node: connections){
            int u = node[0];
            int v = node[1];

            adj.get(u).add(v);
            adj.get(v).add(u);
        }

        int[] vis = new int[n];

        int ans=0;

        for(int i=0;i<n;i++){
            if(vis[i]==0){
                dfs(i,adj,vis);
                ans++;
            }
        }

        return ans-1;
    }
}
