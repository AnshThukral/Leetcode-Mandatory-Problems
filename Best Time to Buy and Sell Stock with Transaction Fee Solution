class Solution {
    static int[][]t;
    public int maxProfit(int[] prices, int fee) {
        int n = prices.length;
        t= new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<2;j++){
                t[i][j]=-1;
            }
        }
        return solve(0,1,prices,n,fee);
    }

    public int solve(int ind,int buy,int[] prices,int n,int fee){
        if(ind==n) return 0;

        if(t[ind][buy]!=-1) return t[ind][buy];

        if(buy==1){
            return t[ind][buy] =  Math.max(
                (-prices[ind] + solve(ind+1,0,prices,n,fee)),
                (0 + solve(ind+1,1,prices,n,fee))
            );
        }else{
            return t[ind][buy] = Math.max(
                ((prices[ind]-fee) + solve(ind+1,1,prices,n,fee)),
                (0 + solve(ind+1,0,prices,n,fee))
            );
        }
    }
}
