class Solution {
    static class Pair{
        int hd;
        Node node;
        Pair(Node node, int hd){
            this.node = node;
            this.hd=hd;
        }
    }
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        // code here
        ArrayList<Integer> ans = new ArrayList<>();
        if(root==null) return ans;
        
        Map<Integer,Integer> map = new TreeMap<>();
        Queue<Pair> q = new LinkedList<Pair>();
        q.add(new Pair(root,0));
        
        while(!q.isEmpty()){
            Pair ele = q.remove();
            int val = ele.hd;
            Node temp = ele.node;
            
            if(!map.containsKey(val)){
                map.put(val,temp.data);
            }
            
            if(temp.left!=null){
                q.add(new Pair(temp.left,val-1));
            }
            if(temp.right!=null){
                q.add(new Pair(temp.right,val+1));
            }
        }
        
        for(Map.Entry<Integer,Integer> entry : map.entrySet()){
            ans.add(entry.getValue());
        }
        
        return ans;
    }
}
