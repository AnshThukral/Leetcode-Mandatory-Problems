class Solution {
    static int[][] t;
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int n = obstacleGrid.length;
        int m = obstacleGrid[0].length;

        if(obstacleGrid[n-1][m-1]==1) return 0;

        t = new int[n][m];

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                t[i][j]=-1;
            }
        }

        return solve(0,0,n,m,obstacleGrid);
    }

    public int solve(int i,int j,int n,int m,int[][] arr){
        if(i==n-1 && j==m-1) return 1;

        if(i>=n || j>=m || arr[i][j]==1) return 0;

        if(t[i][j]!=-1) return t[i][j];

        int right = solve(i,j+1,n,m,arr);
        int down = solve(i+1,j,n,m,arr);

        return t[i][j] = right+down;
    }
}
