class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> temp = new ArrayList<>();
        int n = s.length();
        solve(s,0,n,ans,temp);
        return ans;
    }

    public void solve(String s,int ind,int n,List<List<String>> ans,List<String> temp){
        if(ind==n){
            ans.add(new ArrayList<>(temp));
            return;
        }

        for(int i=ind;i<n;i++){
            if(isPalindrome(s,ind,i)){
                temp.add(s.substring(ind,i+1));
                solve(s,i+1,n,ans,temp);
                temp.remove(temp.size()-1);
            }
        }
    }

    public boolean isPalindrome(String s,int i,int j){
        while(i<j){
            if(s.charAt(i)!=s.charAt(j)){
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
}
