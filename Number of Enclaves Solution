class Solution {
    public int numEnclaves(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;

        int res = 0;

        for(int i=0;i<n;i++){
            if(grid[i][0]==1){
                dfs(i,0,grid);
            }
        }

        for(int i=0;i<m;i++){
            if(grid[0][i]==1){
                dfs(0,i,grid);
            }
        }
    

        for(int i=0;i<n;i++){
            if(grid[i][m-1]==1){
                dfs(i,m-1,grid);
            }
        }

        
        for(int i=0;i<m;i++){
            if(grid[n-1][i]==1){
                dfs(n-1,i,grid);
            }
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1) res++;
            }
        }

        return res;
    }

    public void dfs(int row,int col,int[][] grid){
        int n = grid.length;
        int m = grid[0].length;

        grid[row][col]=2;

        int[] delRow = {-1,0,1,0};
        int[] delCol = {0,1,0,-1};

        for(int i=0;i<4;i++){
            int nRow = row + delRow[i];
            int nCol = col + delCol[i];

            if(nRow>=0 && nRow<n && nCol>=0 && nCol<m && grid[nRow][nCol]==1){
                dfs(nRow,nCol,grid);
            }
        }
    }
}
