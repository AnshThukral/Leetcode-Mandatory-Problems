class Solution {
    static final int MOD = 1000000007;
    public int numSubseq(int[] nums, int target) {
        int n = nums.length;
        Arrays.sort(nums);

        int count = 0;
        int[] pow2 = new int[n+1];
        pow2[0]=1;
        for(int i=1;i<n+1;i++){
            pow2[i] = (pow2[i-1]*2)%MOD;
        }

        for(int i=0;i<n;i++){
            int j = solve(nums,nums[i],target,i+1,n-1);
            if(j==-1){
                if(nums[i]+nums[i]<=target){
                    count++;
                }
            }else{
                count = (count + pow2[j-i])%MOD;
            }
        }
        return count;
    }
    public int solve(int[] nums,int a,int target,int low,int high){
        int res = -1;
        while(low<=high){
            int mid = low + (high-low)/2;

            if(a+nums[mid]<=target){
                res = mid;
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        return res;
    }
}
