/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode[] arr = new ListNode[k];
        int N = 0;
        ListNode temp = head;

        while(temp!=null){
            N++;
            temp = temp.next;
        }

        int baseParts = N/k;
        int extra = N%k;

        ListNode curr = head;
        for(int i=0;i<k;i++){
            ListNode dummy = new ListNode(0);
            ListNode newList = dummy;

            int partSize = baseParts + ((extra>0)?1:0);
            extra--;

            for(int j=0;j<partSize;j++){
                newList.next = new ListNode(curr.val);
                newList = newList.next;
                if(curr.next!=null) curr = curr.next;
            }

            arr[i] = dummy.next;
        }
        return arr;
    }
}
