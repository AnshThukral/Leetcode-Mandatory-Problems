/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode balanceBST(TreeNode root) {
        List<Integer> nodes = new ArrayList<>();

        MakeNodes(nodes,root);

        return MakeBalanceBST(nodes,0,nodes.size()-1);
    }

    public void MakeNodes(List<Integer> nodes,TreeNode root){
        if(root==null) return;

        MakeNodes(nodes,root.left);
        nodes.add(root.val);
        MakeNodes(nodes,root.right);
    }

    public TreeNode MakeBalanceBST(List<Integer> nodes,int start,int end){
        if(start>end){
            return null;
        }

        int mid = start + (end-start)/2;
        TreeNode root = new TreeNode(nodes.get(mid));
        root.left = MakeBalanceBST(nodes,start,mid-1);
        root.right = MakeBalanceBST(nodes,mid+1,end);

        return root;
    }
}
