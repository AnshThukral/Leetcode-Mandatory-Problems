class Solution {
    public int largestCombination(int[] candidates) {
        int maxCombinationSize = 0;

        // Iterate over each bit position (0 to 24 covers up to 2^24, which is > 10^7)
        for (int bit = 0; bit < 24; bit++) {
            int count = 0;

            // Count how many numbers in `candidates` have the `bit` position set
            for (int num : candidates) {
                if ((num & (1 << bit)) != 0) {
                    count++;
                }
            }

            // Update the maximum combination size
            maxCombinationSize = Math.max(maxCombinationSize, count);
        }

        return maxCombinationSize;
    }
}
