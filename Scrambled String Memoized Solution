class Solution{
    static HashMap<String,Boolean> mp = new HashMap<>();
    static boolean isScramble(String S1,String S2)
    {
        //code here
        if(S1.length() != S2.length()){
            return false;
        }
        if(S1.equals(S2)){
            return true;
        }
        
        return solve(S1,S2);
    }
    
    static boolean solve(String s1,String s2){
        if(s1.equals(s2)){
            return true;
        }
        if(s1.length()<=1){
            return false;
        }
        
        String key = s1 + " " + s2;
        
        if(mp.containsKey(key)){
            return mp.get(key);
        }
        
        
        int n = s1.length();
        boolean flag = false;
        
        for(int i=1;i<=n-1;i++){
            boolean swapped = solve(s1.substring(0,i),s2.substring(n-i))
                                &&
                              solve(s1.substring(i),s2.substring(0,n-i));
                              
            boolean nonSwapped = solve(s1.substring(0,i),s2.substring(0,i))
                                &&
                              solve(s1.substring(i),s2.substring(i));
            if(swapped || nonSwapped){
                flag = true;
                break;
            }
        }
        mp.put(key,flag);
        return flag;
    }
}
