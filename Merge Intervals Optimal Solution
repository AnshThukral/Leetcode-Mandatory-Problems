class Solution {
    static class Pair{
        int first,second;
        Pair(int first,int second){
            this.first = first;
            this.second = second;
        }
    }
    public int[][] merge(int[][] intervals) {
        int n = intervals.length;

        Arrays.sort(intervals,(a,b)->a[0]-b[0]);

        ArrayList<Pair> arr = new ArrayList<>();

        for(int i=0;i<n;i++){
            if(arr.isEmpty() || intervals[i][0] > arr.get(arr.size()-1).second){
                arr.add(new Pair(intervals[i][0],intervals[i][1]));
            }else{
                arr.get(arr.size()-1).second = Math.max(arr.get(arr.size()-1).second, intervals[i][1]);
            }
        }

        int size = arr.size();
        int[][] res = new int[size][2];

        for(int i=0;i<size;i++){
            res[i][0] = arr.get(i).first;
            res[i][1] = arr.get(i).second;
        }

        return res;
    }
}
