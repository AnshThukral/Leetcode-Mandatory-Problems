class Solution {
    static int[][] t;
    public int minDistance(String word1, String word2) {
        int n = word1.length();
        int m = word2.length();

        t = new int[n+1][m+1];

        for(int i=0;i<n+1;i++){
            for(int j=0;j<m+1;j++){
                t[i][j]=-1;
            }
        }

        return solve(word1,word2,n,m);
    }

    public int solve(String s1,String s2,int n,int m){
        if(n==0){
            return m;
        } 

        if(m==0){
            return n;
        }
        
        if(t[n][m]!=-1) return t[n][m];

        if(s1.charAt(n-1)==s2.charAt(m-1)){
            return t[n][m] = solve(s1,s2,n-1,m-1);
        }else{
            return t[n][m] = Math.min(
                1 + solve(s1,s2,n-1,m),
                Math.min(
                    1 + solve(s1,s2,n,m-1),
                    1 + solve(s1,s2,n-1,m-1)
                )
            );
        }
    }
}
