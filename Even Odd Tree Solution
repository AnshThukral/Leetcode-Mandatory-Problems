/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isEvenOddTree(TreeNode root) {
        if(root==null) return true;

        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);

        boolean even = true;

        while(!q.isEmpty()){
            int size = q.size();
            int prev = (even)?Integer.MIN_VALUE:Integer.MAX_VALUE;

            for(int i=0;i<size;i++){
                TreeNode node = q.poll();
                int val = node.val;

                if(even){
                    if(val%2==0 || val<=prev) return false;
                }else{
                    if(val%2!=0 || val>=prev) return false;
                }

                prev = val;

                if(node.left!=null) q.offer(node.left);
                if(node.right!=null) q.offer(node.right);

            }
            even = !even;
        }

        return true;
    }
}
