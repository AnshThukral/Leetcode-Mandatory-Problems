class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<Integer> temp = new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();

        int sum = 0;
        int ind=0;
        solve(ans,temp,sum,candidates,target,ind);
        return ans;
    }

    public void solve(List<List<Integer>> ans,List<Integer> temp,int sum,int[] candidates,int target,int index){
        if(index>=candidates.length){
            if(sum==target){
                ans.add(new ArrayList<>(temp));
                return;
            }
            return;
        }

        solve(ans,temp,sum,candidates,target,index+1);

        if(sum+candidates[index]<=target){
            temp.add(candidates[index]);
            solve(ans,temp,sum+candidates[index],candidates,target,index);
            temp.remove(temp.size()-1);
        }
    }
}
