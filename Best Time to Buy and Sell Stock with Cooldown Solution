class Solution {
    static int[][] t;
    public int maxProfit(int[] prices) {
        int n = prices.length;
        t = new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<2;j++){
                t[i][j]=-1;
            }
        }
        return solve(0,1,n,prices);
    }

    public int solve(int ind,int buy,int n,int[] prices){
        if(ind>=n) return 0;

        if(t[ind][buy]!=-1) return t[ind][buy];

        if(buy==1){
            return t[ind][buy] = Math.max(
                (-prices[ind] + solve(ind+1,0,n,prices)),
                (0 + solve(ind+1,1,n,prices))
            );
        }else{
            return t[ind][buy] = Math.max(
                (prices[ind] + solve(ind+2,1,n,prices)),
                (0 + solve(ind+1,0,n,prices))
            );
        }
    }
}
