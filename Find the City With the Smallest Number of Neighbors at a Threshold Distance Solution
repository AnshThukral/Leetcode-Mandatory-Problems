class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        int INF = (int) 1e8;
        int[][] dis = new int[n][n];

        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                dis[i][j]=INF;
            }
        }

        for(int[] edge: edges){
            int u = edge[0], v=edge[1], wt=edge[2];

            dis[u][v]=wt;
            dis[v][u]=wt;
        }


        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(dis[i][k]<INF && dis[k][j]<INF){
                        dis[i][j] = Math.min(dis[i][j], dis[i][k] + dis[k][j]);
                    }
                }
            }
        }

        int maxCity = n, bestCity=-1;

        for(int i=0;i<n;i++){
            int cnt = 0;
            for(int j=0;j<n;j++){
                if(i!=j && dis[i][j]<=distanceThreshold){
                    cnt++;
                }
            }

            if(cnt<=maxCity){
                maxCity=cnt;
                bestCity=i;
            }
        }

        return bestCity;
    }
}
