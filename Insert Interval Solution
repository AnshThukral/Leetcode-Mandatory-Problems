class Solution {
    static class Pair{
        int first,second;
        Pair(int first,int second){
            this.first=first;
            this.second=second;
        }
    }
    public int[][] insert(int[][] intervals, int[] newInterval) {
        int n = intervals.length;
        int start = newInterval[0];
        int end = newInterval[1];
        int i=0;
        ArrayList<Pair> arr = new ArrayList<>();

        while(i<n && intervals[i][1]<start){
            arr.add(new Pair(intervals[i][0],intervals[i][1]));
            i++;
        }

        while(i<n && intervals[i][0]<=end){
            start = Math.min(start,intervals[i][0]);
            end = Math.max(end,intervals[i][1]);
            i++;
        }
        arr.add(new Pair(start,end));

        while(i<n){
            arr.add(new Pair(intervals[i][0],intervals[i][1]));
            i++;
        }

        int size = arr.size();
        int[][] ans = new int[size][2];

        for(int j=0;j<size;j++){
            ans[j][0] = arr.get(j).first;
            ans[j][1] = arr.get(j).second;
        }

        return ans;
    }
}
